//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.1026
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

// 
// 此源代码是由 Microsoft.VSDesigner 4.0.30319.1026 版自动生成。
// 
#pragma warning disable 1591

namespace EMEWEQUALITY.LWGETWebReference {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.ComponentModel;
    using System.Xml.Serialization;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="QualityPaperManagementHTTPEndpointBinding", Namespace="http://www.leemanpaper.com/wsdl/wastePaperManagement/qualityPaper/QualityPaperMan" +
        "agement/v001/concrete")]
    public partial class QualityPaperManagement_v001 : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private RequestHeaderType requestHeaderField;
        
        private System.Threading.SendOrPostCallback GetBinForDeliveryNoteOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateNumberOfBaleOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetQualityCheckOrderOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public QualityPaperManagement_v001() {
            this.Url = global::EMEWEQUALITY.Properties.Settings.Default.EMEWEQUALITY_LWGETWebReference_QualityPaperManagement_v001;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public RequestHeaderType RequestHeader {
            get {
                return this.requestHeaderField;
            }
            set {
                this.requestHeaderField = value;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event GetBinForDeliveryNoteCompletedEventHandler GetBinForDeliveryNoteCompleted;
        
        /// <remarks/>
        public event UpdateNumberOfBaleCompletedEventHandler UpdateNumberOfBaleCompleted;
        
        /// <remarks/>
        public event GetQualityCheckOrderCompletedEventHandler GetQualityCheckOrderCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("RequestHeader")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("/WastePaperManagement/QualityPaper/QualityPaperManagement/v001/GetBinForDeliveryN" +
            "ote", RequestNamespace="http://www.leemanpaper.com/wsdl/wastePaperManagement/qualityPaper/QualityPaperMan" +
            "agement/v001", ResponseNamespace="http://www.leemanpaper.com/wsdl/wastePaperManagement/qualityPaper/QualityPaperMan" +
            "agement/v001", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("DepartmentID", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string GetBinForDeliveryNote([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string OrganizationID, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string DeliveryNoteID, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] out string DepartmentName, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] out string BinID, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] out string BinName) {
            object[] results = this.Invoke("GetBinForDeliveryNote", new object[] {
                        OrganizationID,
                        DeliveryNoteID});
            DepartmentName = ((string)(results[1]));
            BinID = ((string)(results[2]));
            BinName = ((string)(results[3]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetBinForDeliveryNoteAsync(string OrganizationID, string DeliveryNoteID) {
            this.GetBinForDeliveryNoteAsync(OrganizationID, DeliveryNoteID, null);
        }
        
        /// <remarks/>
        public void GetBinForDeliveryNoteAsync(string OrganizationID, string DeliveryNoteID, object userState) {
            if ((this.GetBinForDeliveryNoteOperationCompleted == null)) {
                this.GetBinForDeliveryNoteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBinForDeliveryNoteOperationCompleted);
            }
            this.InvokeAsync("GetBinForDeliveryNote", new object[] {
                        OrganizationID,
                        DeliveryNoteID}, this.GetBinForDeliveryNoteOperationCompleted, userState);
        }
        
        private void OnGetBinForDeliveryNoteOperationCompleted(object arg) {
            if ((this.GetBinForDeliveryNoteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBinForDeliveryNoteCompleted(this, new GetBinForDeliveryNoteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("RequestHeader")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("/WastePaperManagement/QualityPaper/QualityPaperManagement/v001/UpdateNumberOfBale" +
            "", RequestNamespace="http://www.leemanpaper.com/wsdl/wastePaperManagement/qualityPaper/QualityPaperMan" +
            "agement/v001", ResponseNamespace="http://www.leemanpaper.com/wsdl/wastePaperManagement/qualityPaper/QualityPaperMan" +
            "agement/v001", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("ReplyMessage", Namespace="http://www.leemanpaper.com/schema/technology/framework/Common/v001")]
        public ReplyMessageType UpdateNumberOfBale([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string OrganizationID, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string QCorderID, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] float NumberOfBale, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string UpdateBy) {
            object[] results = this.Invoke("UpdateNumberOfBale", new object[] {
                        OrganizationID,
                        QCorderID,
                        NumberOfBale,
                        UpdateBy});
            return ((ReplyMessageType)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateNumberOfBaleAsync(string OrganizationID, string QCorderID, float NumberOfBale, string UpdateBy) {
            this.UpdateNumberOfBaleAsync(OrganizationID, QCorderID, NumberOfBale, UpdateBy, null);
        }
        
        /// <remarks/>
        public void UpdateNumberOfBaleAsync(string OrganizationID, string QCorderID, float NumberOfBale, string UpdateBy, object userState) {
            if ((this.UpdateNumberOfBaleOperationCompleted == null)) {
                this.UpdateNumberOfBaleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateNumberOfBaleOperationCompleted);
            }
            this.InvokeAsync("UpdateNumberOfBale", new object[] {
                        OrganizationID,
                        QCorderID,
                        NumberOfBale,
                        UpdateBy}, this.UpdateNumberOfBaleOperationCompleted, userState);
        }
        
        private void OnUpdateNumberOfBaleOperationCompleted(object arg) {
            if ((this.UpdateNumberOfBaleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateNumberOfBaleCompleted(this, new UpdateNumberOfBaleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("RequestHeader")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("/WastePaperManagement/QualityPaper/QualityPaperManagement/v001/GetQualityCheckOrd" +
            "er", RequestNamespace="http://www.leemanpaper.com/wsdl/wastePaperManagement/qualityPaper/QualityPaperMan" +
            "agement/v001", ResponseNamespace="http://www.leemanpaper.com/wsdl/wastePaperManagement/qualityPaper/QualityPaperMan" +
            "agement/v001", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("QualityCheckOrder", Namespace="http://www.leemanpaper.com/schema/wastePaperManagement/qualityPaper/QualityPaperM" +
            "anagement/v001")]
        public QualityCheckOrderType GetQualityCheckOrder([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string OrganizationID, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string QCorderID) {
            object[] results = this.Invoke("GetQualityCheckOrder", new object[] {
                        OrganizationID,
                        QCorderID});
            return ((QualityCheckOrderType)(results[0]));
        }
        
        /// <remarks/>
        public void GetQualityCheckOrderAsync(string OrganizationID, string QCorderID) {
            this.GetQualityCheckOrderAsync(OrganizationID, QCorderID, null);
        }
        
        /// <remarks/>
        public void GetQualityCheckOrderAsync(string OrganizationID, string QCorderID, object userState) {
            if ((this.GetQualityCheckOrderOperationCompleted == null)) {
                this.GetQualityCheckOrderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetQualityCheckOrderOperationCompleted);
            }
            this.InvokeAsync("GetQualityCheckOrder", new object[] {
                        OrganizationID,
                        QCorderID}, this.GetQualityCheckOrderOperationCompleted, userState);
        }
        
        private void OnGetQualityCheckOrderOperationCompleted(object arg) {
            if ((this.GetQualityCheckOrderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetQualityCheckOrderCompleted(this, new GetQualityCheckOrderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1026")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.leemanpaper.com/schema/technology/framework/Common/v001")]
    [System.Xml.Serialization.XmlRootAttribute("RequestHeader", Namespace="http://www.leemanpaper.com/schema/technology/framework/Common/v001", IsNullable=false)]
    public partial class RequestHeaderType : System.Web.Services.Protocols.SoapHeader {
        
        private string transactionIDField;
        
        private string correlationIDField;
        
        private string sourceIDField;
        
        private string sourceIDTrailField;
        
        private System.Xml.XmlAttribute[] anyAttrField;
        
        /// <remarks/>
        public string TransactionID {
            get {
                return this.transactionIDField;
            }
            set {
                this.transactionIDField = value;
            }
        }
        
        /// <remarks/>
        public string CorrelationID {
            get {
                return this.correlationIDField;
            }
            set {
                this.correlationIDField = value;
            }
        }
        
        /// <remarks/>
        public string SourceID {
            get {
                return this.sourceIDField;
            }
            set {
                this.sourceIDField = value;
            }
        }
        
        /// <remarks/>
        public string SourceIDTrail {
            get {
                return this.sourceIDTrailField;
            }
            set {
                this.sourceIDTrailField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Xml.XmlAttribute[] AnyAttr {
            get {
                return this.anyAttrField;
            }
            set {
                this.anyAttrField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1026")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.leemanpaper.com/schema/common/LeeManCommon/v001")]
    public partial class WeightType {
        
        private WeightUnitType unitField;
        
        private decimal valueField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public WeightUnitType Unit {
            get {
                return this.unitField;
            }
            set {
                this.unitField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public decimal Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1026")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.leemanpaper.com/schema/common/LeeManCommon/v001")]
    public enum WeightUnitType {
        
        /// <remarks/>
        kg,
        
        /// <remarks/>
        g,
        
        /// <remarks/>
        mg,
        
        /// <remarks/>
        lb,
        
        /// <remarks/>
        mt,
        
        /// <remarks/>
        t,
        
        /// <remarks/>
        oz,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1026")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.leemanpaper.com/schema/wastePaperManagement/qualityPaper/QualityPaperM" +
        "anagement/v001")]
    public partial class QCOrderItemType {
        
        private string batchIDField;
        
        private string qualityTypeField;
        
        private string warehouseIDField;
        
        private string binIDField;
        
        private WeightType weightField;
        
        private float numberOfBaleField;
        
        private string scaleRecordIDField;
        
        /// <remarks/>
        public string BatchID {
            get {
                return this.batchIDField;
            }
            set {
                this.batchIDField = value;
            }
        }
        
        /// <remarks/>
        public string QualityType {
            get {
                return this.qualityTypeField;
            }
            set {
                this.qualityTypeField = value;
            }
        }
        
        /// <remarks/>
        public string WarehouseID {
            get {
                return this.warehouseIDField;
            }
            set {
                this.warehouseIDField = value;
            }
        }
        
        /// <remarks/>
        public string BinID {
            get {
                return this.binIDField;
            }
            set {
                this.binIDField = value;
            }
        }
        
        /// <remarks/>
        public WeightType Weight {
            get {
                return this.weightField;
            }
            set {
                this.weightField = value;
            }
        }
        
        /// <remarks/>
        public float NumberOfBale {
            get {
                return this.numberOfBaleField;
            }
            set {
                this.numberOfBaleField = value;
            }
        }
        
        /// <remarks/>
        public string ScaleRecordID {
            get {
                return this.scaleRecordIDField;
            }
            set {
                this.scaleRecordIDField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1026")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.leemanpaper.com/schema/wastePaperManagement/qualityPaper/QualityPaperM" +
        "anagement/v001")]
    public partial class QualityCheckOrderType {
        
        private string organizationIDField;
        
        private string qCOrderIDField;
        
        private System.DateTime createdDateField;
        
        private bool createdDateFieldSpecified;
        
        private string createdByField;
        
        private QCOrderItemType[] qCOrderItemsField;
        
        /// <remarks/>
        public string OrganizationID {
            get {
                return this.organizationIDField;
            }
            set {
                this.organizationIDField = value;
            }
        }
        
        /// <remarks/>
        public string QCOrderID {
            get {
                return this.qCOrderIDField;
            }
            set {
                this.qCOrderIDField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime CreatedDate {
            get {
                return this.createdDateField;
            }
            set {
                this.createdDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CreatedDateSpecified {
            get {
                return this.createdDateFieldSpecified;
            }
            set {
                this.createdDateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string CreatedBy {
            get {
                return this.createdByField;
            }
            set {
                this.createdByField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute("QCOrderItem", IsNullable=false)]
        public QCOrderItemType[] QCOrderItems {
            get {
                return this.qCOrderItemsField;
            }
            set {
                this.qCOrderItemsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1026")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.leemanpaper.com/schema/technology/framework/Common/v001")]
    public partial class ReplyMessageType {
        
        private string resultCodeField;
        
        private string replyMessageField;
        
        /// <remarks/>
        public string ResultCode {
            get {
                return this.resultCodeField;
            }
            set {
                this.resultCodeField = value;
            }
        }
        
        /// <remarks/>
        public string ReplyMessage {
            get {
                return this.replyMessageField;
            }
            set {
                this.replyMessageField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetBinForDeliveryNoteCompletedEventHandler(object sender, GetBinForDeliveryNoteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBinForDeliveryNoteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBinForDeliveryNoteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string DepartmentName {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string BinID {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
        
        /// <remarks/>
        public string BinName {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[3]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void UpdateNumberOfBaleCompletedEventHandler(object sender, UpdateNumberOfBaleCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateNumberOfBaleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateNumberOfBaleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ReplyMessageType Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ReplyMessageType)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetQualityCheckOrderCompletedEventHandler(object sender, GetQualityCheckOrderCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetQualityCheckOrderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetQualityCheckOrderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public QualityCheckOrderType Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((QualityCheckOrderType)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591